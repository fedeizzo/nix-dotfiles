#!/usr/bin/env bash

export BORG_REPO='rasp@home-lab:backup/laptop'
export BORG_PASSCOMMAND='gpg --decrypt /home/fedeizzo/.config/borg/borg-passphrase.enc'

backup() {
    info "Starting backup"
    borg create \
        --progress \
        --stats \
        --show-rc \
        --exclude-caches \
        --exclude "**/venv" \
        --exclude "**/node_modules" \
        --exclude "**/.venv" \
        --exclude "**/data" \
        --exclude "**/db_data" \
        --exclude "**/postgres_data" \
        --compression zstd,3 \
        ::'{hostname}-{now}' \
        $HOME/.gnupg \
        $HOME/.ssh \
        $HOME/.aspell.en.prepl \
        $HOME/.aspell.en.pws \
        $HOME/docs \
        $HOME/nix-dotfiles \
        $HOME/fbk \
        $HOME/uni \
        $HOME/personalProject \
        $HOME/.local/share/fish/fish_history \
        $HOME/.local/share/z/data \
        $HOME/zettelkasten \
        $HOME/org
    backup_exit=$?

    borg prune \
        --progress \
        --stats \
        --save-space \
        --prefix '{hostname}-' \
        --show-rc \
        --keep-daily 1 \
        --keep-weekly 1 \
        --keep-monthly 1
    prune_exit=$?

    global_exit=$(( backup_exit > prune_exit ? backup_exit : prune_exit ))


    if [ ${global_exit} -eq 0 ]; then
        info "Backup and Prune finished successfully"
    elif [ ${global_exit} -eq 1 ]; then
        info "Backup and/or Prune finished with warnings"
    else
        info "Backup and/or Prune finished with errors"
    fi
}

list_repo() {
    borg list 
}

peek_backup() {
    backups=$(borg list --short $_borg_repo)
    index=1
    declare -A mapper
    echo "Backups:"
    for b in $backups; do
        echo -e "\t$index) $b"
        mapper[$index]=$b
        index=$(( index + 1 ))
    done
    read -p "Choose backup: " selected
    if [[ $selected < $index ]]; then
        borg info "::${mapper[$selected]}"
    else
        echo "No backup numbered as: $selected"
    fi
}

info() { printf "\n%s %s\n\n" "$( date )" "$*" >&2; }
trap 'echo $( date ) Backup interrupted >&2; exit 2' INT TERM

helpMessage="usage: backup [command]\n\nPossible commands:\n\tcreate: start backup and prune operation.\n\tlist: list all backup in the repository.\n\tinfo: show info relative to one backup.\n\thelp: print this message.\n"

case $1 in
    "create")
        backup
        ;;
    "list")
        list_repo
        ;;
    "info")
        peek_backup
        ;;
    "help"|*)
        echo -e $helpMessage
        ;;
esac

