#!/usr/bin/env bash

###################################################################
#Script Name	: wiki
#Description	: personal wiki/easy_access dotfiles/sources
#Args         	: type of request
#Author       	: Federico Izzo
#Email         	: federico.izzo99@gmail.com
#Last Update    : 26/2/2020
###################################################################

helpMessage="usage wiki <type>
    \npossibile type
    \n\t k: sxhkd keybind
    \n\t s: sources fzf for editing
    \n\t v: vim bible (my version)
    \n\t c: config fzf for editing
    \n\t a <file>: add file to config list"

[ -z $1 ] && echo -e $helpMessage && exit

keybind() {
    cat $XDG_CONFIG_HOME/sxhkd/sxhkdrc | awk '/^[a-z]/ && last {print $0,"\t",last} {last=""} /^#/{last=$0}' | column -t -s $'\t' | fzf
}

vim() {
    cat $HOME/.sources/wiki/vimBible.txt | awk '/^[#]*/ && last {print $0,"\t",last} {last=""} /^#/{last=$0}' | column -t -s $'\t' | fzf
}

sourceEdit() {
    local files
    IFS=$'\n' files=($(find $HOME/.sources -type f | fzf-tmux --query="$1" --multi --select-1 --exit-0))
    [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

configEdit() {
    local files
    IFS=$'\n' files=($(cat $HOME/.sources/wiki/configFileList | fzf-tmux --query="$1" --multi --select-1 --exit-0))
    [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

sourceConfigEdit() {
    local files
    IFS=$'\n' files=($({ find $HOME/.sources -type f; cat $HOME/.sources/wiki/configFileList; } | sed '/^$/d' | fzf-tmux --query="$1" --multi --select-1 --exit-0))
    [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}

addConfig() {
    local folder
    folder=$(pwd)
    local file
    file=$folder"/"$1
    echo $file >> $HOME/.sources/wiki/configFileList
}

option=$1
file=$2
case "$option" in
    k|keybind)
        # keybind
        # bspc rule -a \* -o state=floating && feh /data/prova/img.png
        bspc rule -a \* -o state=floating
        ;;
    s|sources)
        sourceConfigEdit
        ;;
    v|vim)
        vim
        ;;
    a|add)
        [ -z $file ] && echo "file is necessary" && exit
        addConfig $file
        ;;
    *)
        echo -e $helpMessage
        ;;
esac
