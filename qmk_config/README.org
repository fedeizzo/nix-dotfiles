#+STARTUP: hideblocks
* QMK keyboard configs
Personal QMK configuration for [[https://github.com/foostan/crkbd][corne]] and [[https://github.com/kata0510/Lily58][lily58]] keyboards.

Structure inspired by:
- [[https://github.com/manna-harbour/miryoku_babel][Miryoky Babel]]
- [[https://github.com/Kranex/qmk-config][Kranex qmk config]]

Build:
1. run ~./flash.sh build~.
  
Usage:
1. define the keymap in tables;
2. run ~org-babel-execute-buffer~;
3. run ~org-babel-tangle~;
4. (optional) execute the python code cell to generate the the keymap image;
5. run ~./flash.sh flash lily~ or ~./flash.sh flash corne~ (add dialout group to the user before this step).

** Lily58
[[file:./lily58/layers/base.png]]
[[file:./lily58/layers/num.png]]
[[file:./lily58/layers/navigation.png]]

*** Base
#+NAME: base-layer
| ESC   | 1 | 2 | 3 | 4 | 5 |   | 6 | 7 | 8 | 9 | 0 | ESC  |
| G+TAB | Q | W | F | P | B |   | J | L | U | Y | ' | C+T  |
| LCTL  | A | R | S | T | G |   | M | N | E | I | O | ;    |
| CAPS  | Z | X | C | D | V |   | K | H | , | . | / | LSFT |

#+NAME: base-layer-thumb
| NO | _NAV/ESC | G/SPC | S/TAB | C+T | C+TAB | C/ENT | _NUM/BSPC | LALT | G+TAB |

*** Navigation
#+NAME: navigation-layer
| NO | NO | NO | NO | NO | NO |   | NO   | NO   | NO   | NO   | NO | NO |
| NO | NO | NO | NO | NO | NO |   | MPRV | VOLD | VOLU | MNXT | NO | NO |
| NO | NO | NO | NO | NO | NO |   | LEFT | DOWN | UP   | RGHT | NO | NO |
| NO | NO | NO | NO | NO | NO |   | HOME | END  | MPLY | MUTE | NO | NO |

#+NAME: navigation-layer-thumb
| NO | NO | TRNS | NO | NO | NO | ENT | BSPC | NO | NO |

*** Num
#+NAME: num-layer
| NO | F1 | F2 | F3 | F4 | F5 |   | F6   | F7 | F8 | F9 | F10 | NO |
| NO | [  |  7 |  8 |  9 | ]  |   | {    | (  | *  | &  | }   | NO |
| NO | 0  |  4 |  5 |  6 | =  |   | +    | ^  | %  | $  | )   | NO |
| NO | `  |  1 |  2 |  3 | \  |   | PIPE | #  | @  | !  | ~   | NO |

#+NAME: num-layer-thumb
| NO | _ | SPC | - | NO | NO | ENT | TRNS | NO | NO |

*** Visualization
#+name: image-manipulation
#+begin_src python :var layer_name="Base" :var img_path="./lily58/layers/base.png" :var in_layer=base-layer :var in_layer_thumb=base-layer-thumb :results none silent
  from PIL import Image, ImageDraw, ImageFont


  def format_key(key):
      if key == "PIPE":
          return "|"
      elif key == "NO":
          return ""
      else:
          return str(key)


  def draw_left_keyboard(draw, layer):
      row_x = [20, 80, 137, 190, 243, 294]
      row_y = [
          [45, 38, 27, 22, 27, 38],
          [100, 93, 82, 77, 82, 93],
          [155, 148, 137, 132, 137, 148],
          [210, 203, 192, 187, 192, 203],
      ]
      for ir, col in enumerate(layer):
          ys = row_y[ir]
          for ik, (key, y) in enumerate(zip(col, ys)):
              x = row_x[ik]
              draw.text((x, y), format_key(key), fill=(0, 0, 0), font=font)


  def draw_left_thumb_keyboard(draw, layer):
      row_x = [155, 206, 263, 340, 342]
      row_y = [240, 240, 245, 255, 168]
      for ik, key in enumerate(layer):
          x = row_x[ik]
          y = row_y[ik]
          draw.text((x, y), format_key(key), fill=(0, 0, 0), font=font)


  def draw_right_keyboard(draw, layer):
      row_x = [510, 564, 618, 668, 723, 774]
      row_y = [
          [38, 27, 22, 27, 38, 45],
          [93, 82, 77, 82, 93, 100],
          [148, 137, 132, 137, 148, 155],
          [203, 192, 187, 192, 203, 210],
      ]
      for ir, col in enumerate(layer):
          ys = row_y[ir]
          for ik, (key, y) in enumerate(zip(col, ys)):
              x = row_x[ik]
              draw.text((x, y), format_key(key), fill=(0, 0, 0), font=font)


  def draw_right_thumb_keyboard(draw, layer):
      row_x = [450, 467, 530, 585, 638]
      row_y = [168, 255, 245, 240, 240]
      for ik, key in enumerate(layer):
          x = row_x[ik]
          y = row_y[ik]
          draw.text((x, y), format_key(key), fill=(0, 0, 0), font=font)


  img = Image.open("./assets/lily58.png")
  draw = ImageDraw.Draw(img)
  font = ImageFont.truetype("./assets/FreeMono.ttf", size=14)

  layer_left = [
  list(map(lambda x: format_key(x), row[:6])) for row in in_layer
  ]
  layer_right = [
  list(map(lambda x: format_key(x), row[7:])) for row in in_layer
  ]
  thumb_left = list(map(lambda x: format_key(x), in_layer_thumb[0][:5]))
  thumb_right = list(map(lambda x: format_key(x), in_layer_thumb[0][5:]))
  draw_left_keyboard(draw, layer_left)
  draw_left_thumb_keyboard(draw, thumb_left)
  draw_right_keyboard(draw, layer_right)
  draw_right_thumb_keyboard(draw, thumb_right)

  font = ImageFont.truetype("./assets/FreeMono.ttf", size=28)
  if layer_name == "Num" or layer_name == "Nav":
      draw.text((386, 80), layer_name, fill=(236, 239, 244), font=font)
  elif layer_name == "Base":
      draw.text((381, 80), layer_name, fill=(236, 239, 244), font=font)
  img.save(img_path)
#+end_src

#+begin_src python :noweb yes :results none silent
  <<image-manipulation(layer_name="Base", img_path="./lily58/layers/base.png", in_layer=base-layer, in_layer_thumb=base-layer-thumb)>>
  <<image-manipulation(layer_name="Num", img_path="./lily58/layers/num.png", in_layer=num-layer, in_layer_thumb=num-layer-thumb)>>
  <<image-manipulation(layer_name="Nav", img_path="./lily58/layers/navigation.png", in_layer=navigation-layer, in_layer_thumb=navigation-layer-thumb)>>
#+end_src

*** File generation
**** Keymap
#+name: layer-generator
#+begin_src python :session :var in_layer=base-layer :var in_layer_thumb=base-layer-thumb :results verbatim silent
  mapper = {
      ",": "KC_COMMA",
      ".": "KC_DOT",
      "/": "KC_SLSH",
      ";": "KC_SCLN",
      "'": "KC_QUOT",
      "[": "KC_LBRC",
      "]": "KC_RBRC",
      "{": "KC_LCBR",
      "}": "KC_RCBR",
      "(": "KC_LPRN",
      ")": "KC_RPRN",
      "`": "KC_GRV",
      "\\": "KC_BSLS",
      "=": "KC_EQL",
      "*": "KC_ASTR",
      "&": "KC_AMPR",
      "+": "KC_PLUS",
      "^": "KC_CIRC",
      "%": "KC_PERC",
      "$": "KC_DLR",
      "|": "KC_PIPE",
      "#": "KC_HASH",
      "@": "KC_AT",
      "!": "KC_EXLM",
      "~": "KC_TILD",
      "-": "KC_MINS",
      "_": "KC_UNDS",
      "G+TAB": "LGUI(KC_TAB)",
      "G/SPC": "LGUI_T(KC_SPC)",
      "C+T": "LCTL(KC_T)",
      "C+TAB": "LCTL(KC_TAB)",
      "_NAV/ESC": "LT(_NAV, KC_ESC)",
      "S/TAB": "SFT_T(KC_TAB)",
      "C/ENT": "LCTL_T(KC_ENT)",
      "_NUM/BSPC": "LT(_NUM, KC_BSPC)",
  }


  def format_key(key, comma=True):
      key = mapper.get(str(key), f"KC_{key}")
      return f"{key}"


  def generate_keyboard(layer, layer_thumb):
      layer_left = [
          ",".join(list(map(lambda x: format_key(x), row[:6]))) for row in layer
      ]
      layer_right = [
          ",".join(list(map(lambda x: format_key(x), row[7:]))) for row in layer
      ]
      thumb_left = ",".join(list(map(lambda x: format_key(x), layer_thumb[:4])))
      extra_key_left = format_key(layer_thumb[4])
      extra_key_right = format_key(layer_thumb[5])
      thumb_right = ",".join(list(map(lambda x: format_key(x), layer_thumb[6:])))
      keyboard = ""
      for i, (l, r) in enumerate(zip(layer_left, layer_right)):
          if i < 3:
              keyboard += f"{l},{r},\n"
          else:
              keyboard += f"{l},{extra_key_left},{extra_key_right},{r},\n"
      keyboard += f"{thumb_left},{thumb_right}"
      return keyboard


  generate_keyboard(in_layer, in_layer_thumb[0])
#+end_src

#+begin_src C :main no :noweb yes :mkdirp yes :tangle ./lily58/keymap.c :mkdirp yes :results none silent
  #include QMK_KEYBOARD_H

  enum layer_number {
    _BASE,
    _NUM,
    _NAV,
  };
  const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
    [_BASE] = LAYOUT(
      <<layer-generator(in_layer=base-layer, in_layer_thumb=base-layer-thumb)>>
    ),
    [_NUM] = LAYOUT(
      <<layer-generator(in_layer=num-layer, in_layer_thumb=num-layer-thumb)>>
    ),
    [_NAV] = LAYOUT(
      <<layer-generator(in_layer=navigation-layer, in_layer_thumb=navigation-layer-thumb)>>
    )
  };
#+end_src

**** Config
#+begin_src C :main no :noweb yes :mkdirp yes :tangle ./lily58/config.h :mkdirp yes :results none silent
  #pragma once
  #define MASTER_RIGHT

  #define TAPPING_TERM 175
  #define AUTO_SHIFT_TIMEOUT 175
  #define AUTO_SHIFT_REPEAT
  #define NO_AUTO_SHIFT_SPECIAL
  #define NO_AUTO_SHIFT_NUMERIC

  #define IGNORE_MOD_TAP_INTERRUPT
#+end_src

**** Rules
#+begin_src C :main no :noweb yes :mkdirp yes :tangle ./lily58/rules.mk :mkdirp yes :results none silent
  AUDIO_ENABLE = no          # Audio output
  BACKLIGHT_ENABLE = no      # Enable keyboard backlight functionality
  BOOTMAGIC_ENABLE = no      # Enable Bootmagic Lite
  COMMAND_ENABLE = no        # Commands for debug and configuration
  AUTO_SHIFT_ENABLE = no
  BLUETOOTH_ENABLE = no
  CONSOLE_ENABLE = no        # Console for debug
  EXTRAKEY_ENABLE =  yes     # Audio control and System control
  MOUSEKEY_ENABLE = no       # Mouse keys
  NKRO_ENABLE = no
  OLED_ENABLE= no            # OLED display
  RGBLIGHT_ENABLE = no       # Enable WS2812 RGB underlight.
  SPACE_CADET_ENABLE=no
  SPLIT_KEYBOARD = yes
  SWAP_HANDS_ENABLE = no     # Enable one-hand typing
  TAP_DANCE_ENABLE = no
#+end_src

